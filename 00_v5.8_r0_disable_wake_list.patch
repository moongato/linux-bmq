diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index 5db1f74f3559..2275ae1485c4 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -1657,6 +1657,7 @@ void sched_ttwu_pending(void *arg)
 	if (!llist)
 		return;
 
+	printk(KERN_INFO "sched: sched_ttwu_pending\n");
 	/*
 	 * rq::ttwu_pending racy indication of out-standing wakeups.
 	 * Races such that false-negatives are possible, since they
@@ -1778,7 +1779,7 @@ static inline void ttwu_queue(struct task_struct *p, int cpu, int wake_flags)
 	struct rq *rq = cpu_rq(cpu);
 
 #if defined(CONFIG_SMP)
-	if (ttwu_queue_wakelist(p, cpu, wake_flags))
+	if (0 && ttwu_queue_wakelist(p, cpu, wake_flags))
 		return;
 #endif
 
@@ -2024,7 +2025,7 @@ static int try_to_wake_up(struct task_struct *p, unsigned int state,
 	 * to ensure we observe the correct CPU on which the task is currently
 	 * scheduling.
 	 */
-	if (smp_load_acquire(&p->on_cpu) &&
+	if (smp_load_acquire(&p->on_cpu) && 0 &&
 	    ttwu_queue_wakelist(p, task_cpu(p), wake_flags | WF_ON_CPU))
 		goto unlock;
 
